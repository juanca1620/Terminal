/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;


import Controlador.VentaTiquetesController;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.ZoneId;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.AdminFlota;
import modelo.Caseta;
import modelo.Cliente;
import modelo.Reserva;
import modelo.Viaje;
import singleton.Singleton;
import util.IList;

/**
 *
 * @author zombi
 */
public class VentanaVentaTiquetes extends javax.swing.JFrame {
    

    private Caseta caseta;
    private VentaTiquetesController controller;
    
    public VentanaVentaTiquetes (Caseta caseta){
        initComponents();
        this.caseta = caseta;
        this.controller = new VentaTiquetesController(caseta);
        llenarComboboxViajes();
        llenaComboboxClientes();
        llenarTablas();
    }
    
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cbCodigoViaje = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        cbCliente = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaTiquetes = new javax.swing.JTable();
        btnGuardar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        taRazon = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Selecionar Viaje");

        cbCodigoViaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCodigoViajeActionPerformed(evt);
            }
        });

        jLabel2.setText("Selecionar Cedula del cliente");

        cbCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbClienteActionPerformed(evt);
            }
        });

        tablaTiquetes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaTiquetes);

        btnGuardar.setText("Vender");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Denegar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        jButton1.setText("Regresar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Razon");

        taRazon.setColumns(20);
        taRazon.setRows(5);
        jScrollPane2.setViewportView(taRazon);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnGuardar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnEliminar))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cbCodigoViaje, 0, 154, Short.MAX_VALUE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cbCliente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(66, 66, 66))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbCodigoViaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnEliminar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed

        try {
            String codigoViaje = cbCodigoViaje.getSelectedItem().toString();
            String cedulaCliente = cbCliente.getSelectedItem().toString();
            
            Viaje viaje = controller.obteneViajePorCodigo(codigoViaje);
            Cliente cliente = controller.obtenerClientePorCedula(cedulaCliente, viaje);
            
            controller.confirmarReserva(cliente.encontrarRservaPorCodigo(codigoViaje));
            
            JOptionPane.showMessageDialog(null, "Ticket confirmado con exito");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed

        try {
            String codigoViaje = cbCodigoViaje.getSelectedItem().toString();
            String cedulaCliente = cbCliente.getSelectedItem().toString();

            Viaje viaje = controller.obteneViajePorCodigo(codigoViaje);
            Cliente cliente = controller.obtenerClientePorCedula(cedulaCliente, viaje);

            String razon = taRazon.getText();

            controller.CancelarReserva(cliente.encontrarRservaPorCodigo(codigoViaje), razon);

            llenaComboboxClientes();
            llenarTablas();
            
            JOptionPane.showMessageDialog(null, "Viaje cancelado con exito");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void cbClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbClienteActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        this.dispose();
        new VentanaMenuAdminFlota(caseta).setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cbCodigoViajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCodigoViajeActionPerformed

        llenaComboboxClientes();
        llenarTablas();
        
        
    }//GEN-LAST:event_cbCodigoViajeActionPerformed

    private void llenarComboboxViajes(){
       cbCodigoViaje.removeAllItems();
        IList<Viaje> viajes = controller.getViajes();
        for (int i = 0; i < viajes.size(); i++) {
            cbCodigoViaje.addItem(viajes.get(i).getCodigo());
        }
    }
    
    private void llenaComboboxClientes() {
        
        if(cbCodigoViaje.getSelectedItem() == null){
            return;
        }
        
        cbCliente.removeAllItems();
        
        String codigoViaje = cbCodigoViaje.getSelectedItem().toString();
        
        Viaje viaje = controller.obteneViajePorCodigo(codigoViaje);
        
        IList<Reserva> reservas = viaje.getReservas();
        
        for (int i = 0; i < reservas.size(); i++) {
            Cliente cliente = reservas.get(i).getCliente();
            
            cbCliente.addItem(cliente.getCedula());
        }
    }

    private void llenarTablas() {

        if (cbCodigoViaje.getSelectedItem() == null) {
            return;
        }
        DefaultTableModel model = new DefaultTableModel();

        String codigoViaje = cbCodigoViaje.getSelectedItem().toString();

        Viaje viaje = controller.obteneViajePorCodigo(codigoViaje);

        model.setColumnIdentifiers(new Object[]{"Cedula", "Nombre"});

        IList<Reserva> reservas = viaje.getReservas();

        for (int i = 0; i < reservas.size(); i++) {
            if (reservas.get(i).getEstado().equals(Reserva.ACEPTADA)) {
                continue;
            }
            Cliente cliente = reservas.get(i).getCliente();
            model.addRow(new Object[]{
                cliente.getCedula(),
                cliente.getNombre()});
        }

        tablaTiquetes.setModel(model);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JComboBox<String> cbCliente;
    private javax.swing.JComboBox<String> cbCodigoViaje;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea taRazon;
    private javax.swing.JTable tablaTiquetes;
    // End of variables declaration//GEN-END:variables
}
